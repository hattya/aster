aster.watch(/.+\.go$/, function(files) {
  // vet
  if (exec('go vet')) {
    return notify('failure', 'vet');
  }
  notify('success', 'vet');

  // build
  if (exec('go get -t -v ./...')) {
    return notify('failure', 'build');
  }
  notify('success', 'build');

  // test
  if (exec('go test -v -covermode count -coverprofile cover.out')) {
    return notify('failure', 'test');
  }
  notify('success', 'test');

  // coverage
  exec('go tool cover -func cover.out');
  exec('go tool cover -html cover.out -o coverage.html');
});

if (os.whence('rst2html.py') !== undefined) {
  aster.watch(/.+\.rst$/, function(files) {
    files.forEach(rst2html);
    aster.notify('success', 'aster: rst2html.py', files.join('\n'));
  });

  // rst2html
  function rst2html(rst) {
    var html = rst.slice(0, -4) + '.html';
    return exec('rst2html.py ' + rst + ' ' + html);
  }
}

// exec
function exec(cmdline) {
  console.log('+ ' + cmdline);
  return os.system(cmdline.split(/\s+/));
}

// notify
function notify(name, cmd) {
  return aster.notify(name, 'aster: ' + cmd, cmd + (name == 'success' ? ' passed' : ' failed'));
}
